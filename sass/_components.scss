////////////////////////////////////////////////////////////////////////
//logo

.logo {
    height: 3.25rem;
    margin-left: 3rem;
}

//////////////////////////////////////////////////////////////////////////////
//Search Box

.search {

    flex: 0 0 40%;
    display: flex;
    align-items: center;
    justify-content: center;

    @media only screen and (max-width: $bp-xs) {
        order: 1;
        flex: 0 0 100%;

    }

    &__input {
        //remember that for forms font family and font size are not inherited
        font-family: inherit;
        font-size: 1.5rem;
        
        color: inherit;
        background-color: var(--color-grey-light-2);

        width: 90%;
        padding: .7rem 2rem;
        //a negative margin can move the element to the right into the element itself
        margin-right: -3.5rem;
    
        border: none;
        border-radius: 100px;
        transition: all .2s;

        @media only screen and (max-width: $bp-xs) {
            width: 80%;
    
        }

        &:focus {
            width: 100%;
            outline: none;
            background-color: var(--color-grey-light-3);
            @media only screen and (max-width: $bp-xs) {
                width: 90%;
        
            }  
        }

        &::placeholder {
            color: var(--color-grey-light-4);
        }
    }

    &__button {
        border: none;
        padding: none;

        transition: all .2s;
        background-color: transparent;

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }

        
    }

    //it's generally very easy to size svgs, using height and width

    &__icon {
        height: 2rem;
        width: 2rem;
        //to change color of an svg, just use fill property
        fill: var(--color-grey-dark-3);
        
    }
}

//////////////////////////////////////////////////////////////////////////////
//user navigation

.user-nav {

    margin-right: 1rem;
    align-self: stretch;

    display: flex;
    align-items: center;

    & > * {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
        transition: all .5s;

    }

    & > *:hover {
        background-color: var(--color-grey-light-3);
    }

    &__icon-box {
        position: relative;
        flex: 0 0 5rem;
    }

    &__icon {
        //svg icons usually sized as squares
        height: 1.75rem;
        width: 1.75rem;
        //fill property for svgs
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        position: absolute;
        top: 1.5rem;
        right: 1.5rem;

        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;

        //remember that border radius 50% works only on perfectly square elements
        //use high number in pixels for border radius
        border-radius: 100px;
        
        color: var(--color-grey-light-1);
        background-color: var(--color-primary);

        //flexbox also works for text
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

//////////////////////////////////////////////////////////////////////////////
//Sidebar

.side-nav {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;

    @media only screen and (max-width: $bp-medium) {
        flex-direction: row;
        margin-top: 0;
    }

    list-style: none;

    font-size: 1.4rem;

    margin-top: 3.5rem;

    position: relative;
    
    &__item {
        //the parent element of a pseudo ::before or ::after element is the element
       position: relative;
       
       &:not(:last-child){
           margin-bottom: .5rem;

           @media only screen and (max-width: $bp-medium) {
            margin-bottom: 0;
        }
       }

       @media only screen and (max-width: $bp-medium) {
            flex: 1;
        }
    }

    
    &__item::before {
        //remember in pseudo element after and before to add content
        content:"";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        //BY DEFAULT TRANSFORM ORIGIN SET TO CENTER, BUT BY CHANGING IT YOU CAN START THE TRANSFORM FROM A DIFF SPOT OF THE ELEMENT
        //transform-origin: center;
        transition: transform .2s, 
                    width .4s cubic-bezier(.74,.01,.26,1) .2s,
                    filter .2s;
    }
    
    &__item:hover::before,
    &__item--active::before{
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before{
        transform: scaleY(1);
        width: 100%;
        filter: brightness(110%);
    }
    
    &__link {

        &:link,
        &:visited{
            text-decoration: none;
            color: var(--color-grey-light-1);
            text-transform: uppercase;
            display: block;
            padding: 1.5rem 3rem;
            
            display: flex;
            align-items: center;

            @media only screen and (max-width: $bp-medium) {
                justify-content: center;
            }

            @media only screen and (max-width: $bp-small) {
                flex-direction: column;
            }

            //Z INDEX ONLY WORKS IF THERE IS A SPECIFIED POSITION
            position: relative;
            z-index: 1000;

        }
    }

    &__icon {
        height: 2rem;
        width: 2rem;
        margin-right: 2rem;
        //currentColor is the color of the parent element or current element
        fill: currentColor;

        @media only screen and (max-width: $bp-small) {
            margin-right: 0;
            width: 1.5rem;
            height: 1.5rem;
        }
    }
}

//////////////////////////////////////////////////////////////////////////////
//legal text

.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;

    @media only screen and (max-width: $bp-medium) {
        display: none;
    }

}


//////////////////////////////////////////////////////////////////////////////
//Gallery

.gallery {

    display: flex;


    &__photo {
        //width is set to 100% of the PARENT CONTAINER, WHICH IS FIGURE
        width: 100%;
        //display as a block to avoid having a small space underneath the image
        display: block;
    }
}

//////////////////////////////////////////////////////////////////////////////
//Overview

.overview {

    display: flex;
    align-items: center;

    border-bottom: 1px solid var(--color-grey-light-3);

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;

        @media only screen and (max-width: $bp-small) {
            font-size: 1.8rem;
            padding: 1.25rem;
        }
    }

    &__stars {
        //SUPER IMPORTANT
        //margin-auto is very powerful in flexbox
        margin-right: auto;

        //this is to change stars from default svg behavior of text to remove small whitespace below the text and 
        //exhibit more block like behavior - similar to setting the svg element's properties to font-size:
        
        display: flex;
    }

    &__star-icon,
    &__location-icon {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);

    }

    &__location {

        align-self: stretch;
        font-size: 1.2rem;

        display: flex;
        justify-content: flex-end;
        align-items: center;

        
    }

    &__location-icon {
        margin-right: .5rem;
    }

    &__rating {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-evenly;

        align-self: stretch;

        background-color: var(--color-primary);
        color: var(--color-grey-light-1);

        padding: 1rem;

        margin-left: 2rem;

        @media only screen and (max-width: $bp-small) {
            padding: .5rem;
            min-width: 7rem;
        }

    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;
        @media only screen and (max-width: $bp-small) {
            display: none;
        }
    }
}

//////////////////////////////////////////////////////////////////////////////
//Inline Button

.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;

    padding-bottom: 2px;
    border-bottom: 1px solid currentColor;
    display: inline-block;
    
    background-color: transparent;

    cursor: pointer;

    transition: all .2s;

    & span {
        margin-left: 3px;
        color: currentColor;
        //before there was a predelay on the button changing color when transition was set to all
        transition: margin-left .2s;
    }

    &:hover {
        color: var(--color-grey-dark-1);
        padding-bottom: 4px;

        span {
            margin-left: 5px;
        }
    }

    &:focus {
        //should be the first thing on focus - to remove default outline
        outline: none;
        animation: pulsate 1s infinite;
    }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0, 0, 0, .25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}

//////////////////////////////////////////////////////////////////////////////
//Paragraph

.paragraph {

    //last-child in this situation would not work because there are other children after the paragraph
    //LAST-CHILD WILL INCLUDE OTHER CHILD SELECTORS
    //what will work is last-of-type, which only works on children with a paragraph selector
    &:not(:last-of-type) {
        margin-bottom: 2rem;
    }
}

//////////////////////////////////////////////////////////////////////////////
// List

.list {

    margin: 3rem 0;
    padding: 3rem 0;

    border-top: var(--line);
    border-bottom: var(--line);

    list-style: none;

    display: flex;
    flex-wrap: wrap;
    margin-bottom: 7rem;

    &__item {
        flex: 0 0 50%;
        margin-bottom: 1rem;
    }

    //when adding svg files through css, it's a better practice to add the svg into its own pseudo element

    //remember to always specify content with pseudo elements before and after
    &__item::before {
        content: "";
        display: inline-block;
        height: 1.5rem;
        width: 1.5rem;
        margin-right: .7rem;

        //**********

        //newer browsers approach
        background-color: var(--color-primary);
        mask-image: url(../img/chevron-thin-right.svg);
        //similar to background-size cover, but for masks
        mask-size: cover;

        //this is the approach for older browsers
        // background-image: url(../img/chevron-thin-right.svg);
        // background-size: cover;
    }
}

//////////////////////////////////////////////////////////////////////////////
//Recommend

.recommend {

    font-size: 1.3rem;
    
    display: flex;
    align-items: center;

    color: var(--color-grey-dark-3);

    &__count {
        margin-right: auto;
    }

    &__friends {
        display: flex;
        //align-items: center;
    }

    &__photo {

        box-sizing: content-box;

        height: 5rem;
        width: 5rem;

        border-radius: 50%;

        border: 3px solid var(--color-grey-light-1);

        &:not(:last-child){
            margin-right: -1.5rem;

            @media only screen and (max-width: $bp-large) {
                margin-right: -3rem;
            }
        }
    }

}

.review {
    
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;

    @media only screen and (max-width: $bp-medium) {
        padding: 2rem;
        margin-bottom: 2.5rem;
    }

    overflow: hidden;

    position: relative;
    
    &__text {
        margin-bottom: 2rem;

        //remember, z index ONlY works if the position is set
        position: relative;
        z-index: 100;
    }
    
    &__user {
        display: flex;
        align-items: center;
        
    }
    
    &__photo {
        border-radius: 50%;
        height: 4.5rem;
        width: 4.5rem;
        box-sizing: content-box;
        margin-right: 2rem;
    }
    
    &__user-box {
        display: flex;
        flex-direction: column;
        margin-right: auto;
    }
    
    &__user-name {
        color: var(--color-grey-dark-1);
        font-weight: 700;
    }
    
    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }
    
    &__rating {
        color: var(--color-primary);
        
        font-size: 2.5rem;
        
        font-weight: 300;
    }
    
    &::before {
        content:"\201C";
        font-size: 20rem;
        opacity: .2;
        //rememeber to set line height to remove any unneeded spacing
        line-height: 1;

        position: absolute;
        top: -2rem;
        left: -1rem;

        //overriding the imported font options to a default option to make the quote more quotelike
        font-family: sans-serif;
        
    }

    &::after {
        content:"\201D";
        font-size: 20rem;
        opacity: .2;
        //rememeber to set line height to remove any unneeded spacing
        line-height: 1;

        position: absolute;
        bottom: -5rem;
        right: 2rem;

        //overriding the imported font options to a default option to make the quote more quotelike
        font-family: sans-serif;
        
    }
}

//////////////////////////////////////////////////////////////////////////////
//Call To Action

.cta {
    padding: 3.5rem 0;
    text-align: center;

    @media only screen and (max-width: $bp-medium) {
        padding: 2.5rem 0;
    }

    &__book {
        font-size: 2rem;
        font-weight: 300;
        text-transform: uppercase;
        margin-bottom: 2.5rem;
    }
}

.btn {
    
    border: none;
    border-radius: 100px;

    font-size: 1.5rem;
    font-weight: 300;
    letter-spacing: 1px;
    color: var(--color-grey-light-3);
    text-transform: uppercase;

    background-image: linear-gradient(to right, var(--color-primary-dark) 40%, var(--color-primary-light));
    background-size: cover;

    box-shadow: var(--box-shadow);

    position: relative;

    overflow: hidden;

    //this is here but it doesnt do anything - transition doesnt work for bckground colors or gradients
    transition: all 2s;

    
    //rememeber, when you see a lot of duplicated code make a new selector with that code that better suits 
    //the DRY principle
    
    & > * {
        //so that padding can be used always set spans to inline block
        display: inline-block;
        padding: 2rem 7rem;
        height: 100%;
        width: 100%;
        
        transition: all .2s;
    }

    &__visible {
        padding: 2rem 7rem; 
    }
    
    &__invisible {
        padding: 2rem 0rem;
        position: absolute;
        left: 0;
        //setting a top: -100% offsets the height by exactly the hight of the other elemenet
        top: -100%;
        
    }
    
    &:hover {
        background-image: linear-gradient(to right, var(--color-primary-light) 40%, var(--color-primary-dark));
    }
    
    &:hover {
        cursor: pointer;

    }

    &:hover &__visible {
        transform: translateY(100%);
    }

    &:hover &__invisible {
        top: 0;
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}